<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lKHex2ddI/o/u3D2d5+aitQAAAAASUVORK5CYII=
</value>
  </data>
</root>